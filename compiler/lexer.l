%{
#include "parser.tab.h"  // Include token definitions generated by Bison
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

extern int yylineno;
%}

%%
[ \t]+                 ;    // skip whitespace

"new"                  { return NEW; }
"class"                { return CLASS; }
"def"                  { return DEF; }
"print"                { return PRINT; }
"return"               { return RETURN; }
"if"                   { return IF; }
"else"                 { return ELSE; }
"while"                { return WHILE; }

"=="                   { return EQ; }
"!="                   { return NEQ; }
"<="                   { return LE; }
">="                   { return GE; }
"<"                    { return LT; }
">"                    { return GT; }

"="                    { return ASSIGN; }
"+"                    { return PLUS; }
"-"                    { return MINUS; }
"*"                    { return MUL; }
"/"                    { return DIV; }
"."                    { return DOT; }

"("                    { return LPAREN; }
")"                    { return RPAREN; }
"{"                    { return LBRACE; }
"}"                    { return RBRACE; }
","                    { return COMMA; }

[0-9]+                 { yylval.num = atoi(yytext); return NUMBER; }

\"([^\\\"]|\\.)*\"     {
                          // Remove surrounding quotes
                          int len = yyleng;
                          char *str = (char*) malloc(len);
                          strncpy(str, yytext + 1, len - 2);
                          str[len - 2] = '\0';
                          yylval.str = str;
                          return STRING;
                      }

[a-zA-Z_][a-zA-Z0-9_]* {
                          yylval.str = strdup(yytext);
                          return IDENTIFIER;
                      }

\n                     { yylineno++; return NEWLINE; }

.                      { fprintf(stderr, "Unknown character: %s at line %d\n", yytext, yylineno); exit(1); }

%%
int yywrap(void) {
    return 1;
}
